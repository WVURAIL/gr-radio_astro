id: radio_astro_ra_event_sink
label: ra_event_sink
category: '[radio_astro]'

templates:
  imports: import radio_astro
  make: radio_astro.ra_event_sink(${setup}, ${vlen}, ${frequency}, ${bandwidth}, ${record}, ${note}, ${observer}, ${telescope}, ${device}, ${gain1}, ${azimuth}, ${elevation})
  callbacks:
    - set_setup(${setup})
    - set_vlen(${vlen})
    - set_sample_rate(${bandwidth})
    - set_record(${record})
    - set_frequency(${frequency})
    - set_note(${note})
    - set_observer(${observer})
    - set_telescope(${telescope})
    - set_device(${device})
    - set_frequency(${frequency})
    - set_gain1(${gain1})
    - set_telaz(${azimuth})
    - set_telel(${elevation})
#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as \$keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
- id: setup
  label: Setup File
  dtype: string
  default: 'WatchDetect.not'
- id: note
  label: Note
  dtype: string
  default: 'Event Detection'
- id: observer
  label: Observer
  dtype: string
  default: "Science Aficionados"
- id: telescope
  label: Telescope
  dtype: string
  default: "My Horn"
- id: device
  label: Device
  dtype: string
  default: "rtlsdr,bias=1"
- id: gain1
  label: Gain (dB)
  dtype: float
  default: '14.0'
- id: azimuth
  label: Azimuth (d)
  dtype: float
  default: '0.0'
- id: elevation
  label: Elevation (d)
  dtype: float
  default: '90.0'
- id: record
  label: Record
  dtype: int
  default: '0'
- id: frequency
  label: Frequency (MHz)
  dtype: float
  default: '1420.406'
- id: bandwidth
  label: Bandwidth (MHz)
  dtype: float
  default: '1.0'
- id: vlen
  label: Vec Length
  dtype: int
  default: '128'

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in
  domain: stream
  dtype: complex
  vlen: ${vlen}
  optional: 0


#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
